CREATE TABLE GOV_DEPT (
	CODE VARCHAR(6),
	DESCRIPTION VARCHAR(255) NOT NULL,
	IS_ACTIVE bool NOT NULL DEFAULT true,
	CONSTRAINT GOV_DEPT_PK PRIMARY KEY (CODE)
);

CREATE TABLE GOV_PTJ_DEPT (
	DEPT_CODE VARCHAR(6),
	CODE VARCHAR(6) NOT NULL,
	DESCRIPTION VARCHAR(255) NOT NULL,
	IS_ACTIVE bool NOT NULL DEFAULT true,
	CONSTRAINT GOV_DEPT_PTJ_PK PRIMARY KEY (CODE),
	CONSTRAINT DEPT_CODE_FK FOREIGN KEY (DEPT_CODE) REFERENCES GOV_DEPT(CODE),
	CONSTRAINT GOT_DEPT_PTJ_UNIQ UNIQUE (DEPT_CODE, CODE)
);

/**
 * USER could be PUBLIC, COMPANY'S STAFF, GOVERMENT'S STAFF
 * 	APP_USER.USER_TYPE_CODE will decide the next table
 *  
 */
CREATE TABLE APP_USER_TYPE (
	CODE VARCHAR(6),
	DESCRIPTION VARCHAR(255) NOT NULL,
	IS_ACTIVE bool NOT NULL DEFAULT true,
	CONSTRAINT APP_USER_TYPE_PK PRIMARY KEY (CODE)
);

/**
 * A COMPANY roles will have MEMBER OF BOD, EXEC etc etc
 * A GOVERMENT's staff will be SKN, PENGARAH,
 * JBN USER, MOF USER 
 * But most important SuperAdmin
 * How does member roles play in the system?
 * After login, user will see a landing page based on their APP_USER_TYPE and APP_ROLES and GOV_USER_PTJ
 * 
 * If GOV_USER_PTJ is NULL, user will be able to see all the system/records from other PTJ (example someone in HQ/higher up)
 * If GOV_USER_PTJ 
 * 	APP_USER_TYPE 	| 			 		| APP_ROLES			| LANDING_PAGE	 
 *		GOVERMENT	|	GOV_USER_PTJ	|	SUPERADMIN 		|	|
 *		GOVERMENT	| 	GOV_USER_PTJ	|	GOV_ADMIN		|	|
 *		GOVERMENT	|	GOV_USER_PTJ	|	GOV_ADMIN		|	|
 * 		GOVERMENT	|	GOV_USER_PTJ	|	GOV_USER		|	|
 * 		COMPANY 	|	COMPANY			|	COMP_ADMIN		|	|
 * 		COMPANY 	|	COMPANY			|	COMP_USER		|	|
 * 		-			|	PUBLIC			|	USER			|	|
 * 
 */
CREATE TABLE APP_ROLES(
	CODE VARCHAR(6),
	DESCRIPTION VARCHAR(255) NOT NULL,
	IS_ACTIVE bool NOT NULL DEFAULT TRUE,
	CONSTRAINT APP_ROLES_PK PRIMARY KEY (CODE)
);

/**
 * Registered all function in the system
 */
CREATE TABLE APP_FUNCTION (
	ID INT8,
	DESCRIPTION VARCHAR(255) NOT NULL,
	URI VARCHAR(500),
	REMARKS VARCHAR(255),
	CONSTRAINT APP_FUNCTION_PK PRIMARY KEY (ID)
);

/**
 * NOTE TO THINK: 
 * 	1. WHAT IF USER HAVE MULTIPLE ROLES? 
 * 		- Memangku jawatan?
 *  2.
*/
CREATE TABLE APP_USER (
	ID INT8,
	USERNAME VARCHAR(100) NOT NULL UNIQUE,
	PASSWORD VARCHAR(500) NOT NULL UNIQUE,
	USER_TYPE_CODE VARCHAR(6) NOT NULL,
	EMAIL VARCHAR(255) NOT NULL,
	USER_TOKEN VARCHAR(500) NULL,
	IS_CONNECTED BOOL NOT NULL DEFAULT FALSE,
	IS_ACTIVE BOOL NOT NULL DEFAULT TRUE,
	UPDATED_BY INT8 NULL,
	UPDATED_AT TIMESTAMP NULL,
	CREATED_BY INT8 NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL,
	CONSTRAINT APP_USER_PK PRIMARY KEY (ID),
	CONSTRAINT USER_TYPE_CODE_FK FOREIGN KEY (USER_TYPE_CODE) REFERENCES APP_USER_TYPE(CODE)
);


/**
 * For EACH ROLE in the system, a dedicated function is made for them, so instead of changing the code, 
 * only change the function that can be access by the role
*/
CREATE TABLE APP_ROLE_FUNCTION (
	ID INT8,
	FUNC_ID INT8 NOT NULL,
	DEPT_CODE VARCHAR(6) NOT NULL,
	IS_ACTIVE BOOL NOT NULL DEFAULT TRUE,
	CONSTRAINT APP_ROLE_FUNCTION_PK PRIMARY KEY (ID),
	CONSTRAINT FUNC_ID_FK FOREIGN KEY (FUNC_ID) REFERENCES APP_FUNCTION(ID),
	CONSTRAINT DEPT_CODE_DEPT_FK FOREIGN KEY (DEPT_CODE) REFERENCES GOV_PTJ_DEPT(CODE),
	CONSTRAINT APP_ROLE_FUNCTION_UNIQ UNIQUE (FUNC_ID, DEPT_CODE)
);

CREATE TABLE GOV_USER_PTJ (
	ID INT8,
	USER_ID INT8 NOT NULL,
	PTJ_CODE VARCHAR(6) NOT NULL,
	IS_ACTIVE BOOL NOT NULL DEFAULT TRUE,
	UPDATED_BY INT8 NULL,
	UPDATED_AT TIMESTAMP NULL,
	CREATED_BY INT8 NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL,
	CONSTRAINT GOV_USER_PTJ_PK PRIMARY KEY (ID),
	CONSTRAINT PTJ_CODE_FK FOREIGN KEY (PTJ_CODE) REFERENCES GOV_PTJ_DEPT(CODE),
	CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES APP_USER(ID),
	CONSTRAINT GOT_USER_PTJ_UNIQ UNIQUE (USER_ID, PTJ_CODE)
);

CREATE TABLE APP_USER_ROLES (
	ID INT8,
	USER_ID INT8 NOT NULL,
	ROLE_CODE VARCHAR(6) NOT NULL,
	IS_ACTIVE BOOL NOT NULL DEFAULT TRUE,
	CREATED_BY INT8 NOT NULL,
	CREATED_AT TIMESTAMP NOT NULL,
	CONSTRAINT APP_USER_ROLES_PK PRIMARY KEY (ID),
	CONSTRAINT USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES APP_USER(ID),
	CONSTRAINT ROLE_CODE_FK FOREIGN KEY (ROLE_CODE) REFERENCES APP_ROLES(CODE)
);

